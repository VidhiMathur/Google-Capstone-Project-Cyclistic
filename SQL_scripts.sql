Combining all 12 tables into one to form annual dataset:

CREATE TABLE "ANNUAL" AS
 SELECT * FROM "JUNE"
 UNION ALL
 SELECT * FROM "JULY"
 UNION ALL
 SELECT * FROM "AUGUST"
 UNION ALL
 SELECT * FROM "SEPTEMBER"
 UNION ALL
 SELECT * FROM "OCTOBER"
 UNION ALL
 SELECT * FROM "NOVEMBER"
 UNION ALL
 SELECT * FROM "DECEMBER"
 UNION ALL
 SELECT * FROM "JANUARY_2021"
 UNION ALL 
 SELECT * FROM "FEBRUARY_2021"
 UNION ALL
 SELECT * FROM "MARCH_2021"
 UNION ALL 
 SELECT * FROM "APRIL_2021"
 UNION ALL
 SELECT * FROM "MAY_2021";

----------------------------------------------------------------------------------------------------
Analyzing nulls in the table

select count(*) from "ANNUAL"
WHERE ride_id is NULL; ---- no nulls in ride_id column 

select count(*) from "ANNUAL"
WHERE rideable_type is NULL;--- no nulls

select count(*) from "ANNUAL"
WHERE started_at is NULL;--- no nulls

select count(*) from "ANNUAL"
WHERE ended_at is NULL; --- no nulls

select count(*) from "ANNUAL"
WHERE start_station_name is NULL; ---contains 148231 null values

select count(*) from "ANNUAL"
WHERE start_station_id is NULL;----contains 148857 null values

select count(*) from "ANNUAL"
WHERE end_station_name is NULL;---contains 171095 null values

select count(*) from "ANNUAL"
WHERE end_station_id is NULL;---contains 171556 null values

select count(*) from "ANNUAL"
WHERE start_lat is NULL;--- no nulls

select count(*) from "ANNUAL"
WHERE start_lng is NULL;---no nulls

select count(*) from "ANNUAL"
WHERE end_lat is NULL;---4684 nulls

select count(*) from "ANNUAL"
WHERE end_lng is NULL; ---4684 nulls 

select count(*) from "ANNUAL"
WHERE member_casual is NULL;---no nulls 

----------------------------------------------------------------------------------------------------
Removing ride_ids that have a length greater than the standard length

select count(ride_id)
from "ANNUAL"
where length(ride_id)=16;

Delete from "ANNUAL"
WHERE LENGTH(RIDE_ID)>16 OR LENGTH(RIDE_ID)<16;

select count(*) from "ANNUAL";
----------------------------------------------------------------------------------------------------
AVERAGE RIDE LENGTHS FOR CASUAL AND MEMBER RIDERS

select avg(ended_at-started_at) from "ANNUAL"; ----23 minutes

select member_casual,avg(ended_at-started_at) 
from "ANNUAL"
group by member_casual; ---casual:40 minutes,member:11 minutes 
----------------------------------------------------------------------------------------------------
TOTAL NUMBER OF BIKE RIDES PROVIDED

SELECT COUNT(RIDE_ID) FROM "ANNUAL";
----------------------------------------------------------------------------------------------------
TOTAL RIDES BY EACH CUSTOMER TYPE

SELECT MEMBER_CASUAL,COUNT(RIDE_ID) FROM "ANNUAL"
GROUP BY MEMBER_CASUAL;
----------------------------------------------------------------------------------------------------
NUMBER OF BIKE RIDES OF EACH TYPE

SELECT RIDEABLE_TYPE,COUNT(RIDE_ID) FROM "ANNUAL"
GROUP BY RIDEABLE_TYPE;
----------------------------------------------------------------------------------------------------
-NUMBER OF RIDES BY EACH TYPE OF BIKES BY EACH TYPE OF RIDER

SELECT MEMBER_CASUAL,RIDEABLE_TYPE,COUNT(RIDE_ID) AS RIDES FROM "ANNUAL"
GROUP BY RIDEABLE_TYPE,MEMBER_CASUAL;
----------------------------------------------------------------------------------------------------
NUMBER OF RIDES PER DAY OF THE WEEK 

SELECT DAY_NAME,COUNT(RIDE_ID)
FROM
(SELECT *,
CASE WHEN DAY_OF_WEEK=0 THEN 'SUNDAY'
     WHEN DAY_OF_WEEK=1 THEN 'MONDAY'
     WHEN DAY_OF_WEEK=2 THEN 'TUESDAY'
     WHEN DAY_OF_WEEK=3 THEN 'WEDNESDAY'
     WHEN DAY_OF_WEEK=4 THEN 'THURSDAY'
     WHEN DAY_OF_WEEK=5 THEN 'FRIDAY'
     ELSE 'SATURDAY'
     END AS DAY_NAME
FROM
(SELECT RIDE_ID,STARTED_AT,EXTRACT(DOW FROM STARTED_AT) AS DAY_OF_WEEK FROM "ANNUAL") T1) T2
GROUP BY DAY_NAME;
----------------------------------------------------------------------------------------------------
NUMBER OF CASUAL AND CYCLISTIC MEMBERS ON EACH DAY OF THE WEEK

SELECT MEMBER_CASUAL,DAY_NAME,COUNT(RIDE_ID)
FROM
(SELECT *,
CASE WHEN DAY_OF_WEEK=0 THEN 'SUNDAY'
     WHEN DAY_OF_WEEK=1 THEN 'MONDAY'
     WHEN DAY_OF_WEEK=2 THEN 'TUESDAY'
     WHEN DAY_OF_WEEK=3 THEN 'WEDNESDAY'
     WHEN DAY_OF_WEEK=4 THEN 'THURSDAY'
     WHEN DAY_OF_WEEK=5 THEN 'FRIDAY'
     ELSE 'SATURDAY'
     END AS DAY_NAME
FROM
(SELECT RIDE_ID,MEMBER_CASUAL,STARTED_AT,EXTRACT(DOW FROM STARTED_AT) AS DAY_OF_WEEK FROM "ANNUAL") T1)T2
GROUP BY MEMBER_CASUAL,DAY_NAME;
----------------------------------------------------------------------------------------------------
NUMBER OF RIDES PER MONTH

SELECT MONTH_NAME,COUNT(RIDE_ID)
FROM
(SELECT *,
CASE WHEN MONTH_NUMBER=1 THEN 'JANUARY'
     WHEN MONTH_NUMBER=2 THEN 'FEBRUARY'
     WHEN MONTH_NUMBER=3 THEN 'MARCH'
     WHEN MONTH_NUMBER=4 THEN 'APRIL'
     WHEN MONTH_NUMBER=5 THEN 'MAY'
     WHEN MONTH_NUMBER=6 THEN 'JUNE'
     WHEN MONTH_NUMBER=7 THEN 'JULY'
     WHEN MONTH_NUMBER=8 THEN 'AUGUST'
     WHEN MONTH_NUMBER=9 THEN 'SEPTMEBER'
     WHEN MONTH_NUMBER=10 THEN 'OCTOBER'
     WHEN MONTH_NUMBER=11 THEN 'NOVEMBER'
     ELSE 'DECEMBER'
     END AS MONTH_NAME
 FROM
(SELECT RIDE_ID,MEMBER_CASUAL,STARTED_AT,EXTRACT(MONTH FROM STARTED_AT) AS MONTH_NUMBER FROM "ANNUAL")T1)T2
GROUP BY MONTH_NAME;
----------------------------------------------------------------------------------------------------
NUMBER OF CASUAL AND CYCLISTIC RIDERS PER MONTH

SELECT MONTH_NAME,MEMBER_CASUAL,COUNT(RIDE_ID)
FROM
(SELECT *,
CASE WHEN MONTH_NUMBER=1 THEN 'JANUARY'
     WHEN MONTH_NUMBER=2 THEN 'FEBRUARY'
     WHEN MONTH_NUMBER=3 THEN 'MARCH'
     WHEN MONTH_NUMBER=4 THEN 'APRIL'
     WHEN MONTH_NUMBER=5 THEN 'MAY'
     WHEN MONTH_NUMBER=6 THEN 'JUNE'
     WHEN MONTH_NUMBER=7 THEN 'JULY'
     WHEN MONTH_NUMBER=8 THEN 'AUGUST'
     WHEN MONTH_NUMBER=9 THEN 'SEPTMEBER'
     WHEN MONTH_NUMBER=10 THEN 'OCTOBER'
     WHEN MONTH_NUMBER=11 THEN 'NOVEMBER'
     ELSE 'DECEMBER'
     END AS MONTH_NAME
 FROM
(SELECT RIDE_ID,MEMBER_CASUAL,STARTED_AT,EXTRACT(MONTH FROM STARTED_AT) AS MONTH_NUMBER FROM "ANNUAL")T1)T2
GROUP BY MONTH_NAME,MEMBER_CASUAL;

----------------------------------------------------------------------------------------------------
NUMBER OF RIDES BY CASUAL AND MEMBER ON WEEKDAY/WEEKEND

SELECT MEMBER_CASUAL,WEEK,SUM(RIDES)
FROM
(SELECT *,
CASE WHEN DAY_NAME='SUNDAY' OR DAY_NAME='SATURDAY' THEN 'WEEKEND'
     ELSE 'WEEKDAY'
     END AS WEEK
FROM
(SELECT MEMBER_CASUAL,DAY_NAME,COUNT(RIDE_ID) AS RIDES
FROM
(SELECT *,
CASE WHEN DAY_OF_WEEK=0 THEN 'SUNDAY'
     WHEN DAY_OF_WEEK=1 THEN 'MONDAY'
     WHEN DAY_OF_WEEK=2 THEN 'TUESDAY'
     WHEN DAY_OF_WEEK=3 THEN 'WEDNESDAY'
     WHEN DAY_OF_WEEK=4 THEN 'THURSDAY'
     WHEN DAY_OF_WEEK=5 THEN 'FRIDAY'
     ELSE 'SATURDAY'
     END AS DAY_NAME
FROM
(SELECT RIDE_ID,MEMBER_CASUAL,STARTED_AT,EXTRACT(DOW FROM STARTED_AT) AS DAY_OF_WEEK FROM "ANNUAL") T1)T2
GROUP BY MEMBER_CASUAL,DAY_NAME)T3)T4
GROUP BY MEMBER_CASUAL,WEEK;

----------------------------------------------------------------------------------------------------
NUMBER OF RIDES BY TIME OF DAY

SELECT TIME_OF_DAY,COUNT(RIDE_ID)
FROM
(SELECT *,TIME_FROM::TIME ,
CASE WHEN TIME_FROM>= '06:00:00' AND TIME_FROM< '12:00:00'THEN 'MORNING'
     WHEN TIME_FROM>= '12:00:00' AND TIME_FROM<'17:00:00' Then 'AFTERNOON'
     WHEN TIME_FROM >= '17:00:00' AND TIME_FROM< '20:00:00' THEN 'EVENING'
     ELSE 'NIGHT'
     END AS TIME_OF_DAY
FROM
(SELECT RIDE_ID,MEMBER_CASUAL,SUBSTRING(STARTED_AT::VARCHAR,12,8) AS TIME_FROM FROM "ANNUAL")T1)T2
GROUP BY TIME_OF_DAY;


SELECT MEMBER_CASUAL,TIME_OF_DAY,COUNT(RIDE_ID)
FROM
(SELECT *,TIME_FROM::TIME ,
CASE WHEN TIME_FROM>= '06:00:00' AND TIME_FROM< '12:00:00'THEN 'MORNING'
     WHEN TIME_FROM>= '12:00:00' AND TIME_FROM<'17:00:00' Then 'AFTERNOON'
     WHEN TIME_FROM >= '17:00:00' AND TIME_FROM< '20:00:00' THEN 'EVENING'
     ELSE 'NIGHT'
     END AS TIME_OF_DAY
FROM
(SELECT RIDE_ID,MEMBER_CASUAL,SUBSTRING(STARTED_AT::VARCHAR,12,8) AS TIME_FROM FROM "ANNUAL")T1)T2
GROUP BY TIME_OF_DAY,MEMBER_CASUAL;

----------------------------------------------------------------------------------------------------
MOST FREQUENT VISITED STATION BY CASUAL AND MEMBERS

SELECT MEMBER_CASUAL,START_STATION_NAME,COUNT(START_STATION_NAME) AS COUNT_OF_STATION
FROM "ANNUAL"
GROUP BY MEMBER_CASUAL,START_STATION_NAME
ORDER BY COUNT_OF_STATION DESC)


SELECT MEMBER_CASUAL,START_STATION_NAME,COUNT_OF_STATION
FROM
(SELECT MEMBER_CASUAL,START_STATION_NAME,COUNT(START_STATION_NAME) AS COUNT_OF_STATION
FROM "ANNUAL"
GROUP BY MEMBER_CASUAL,START_STATION_NAME) T1
WHERE MEMBER_CASUAL='casual'
ORDER BY COUNT_OF_STATION DESC;


SELECT MEMBER_CASUAL,START_STATION_NAME,COUNT_OF_STATION
FROM
(SELECT MEMBER_CASUAL,START_STATION_NAME,COUNT(START_STATION_NAME) AS COUNT_OF_STATION
FROM "ANNUAL"
GROUP BY MEMBER_CASUAL,START_STATION_NAME) T1
WHERE MEMBER_CASUAL='member'
ORDER BY COUNT_OF_STATION DESC;

----------------------------------------------------------------------------------------------------
SELECT *,
CASE WHEN MONTH_NAME='JANUARY' THEN 1
WHEN MONTH_NAME='FEBRUARY' THEN 2
WHEN MONTH_NAME='MARCH' THEN 3
WHEN MONTH_NAME='APRIL' THEN 4
WHEN MONTH_NAME='MAY' THEN 5
WHEN MONTH_NAME='JUNE' THEN 6
WHEN MONTH_NAME='JULY' THEN 7
WHEN MONTH_NAME='AUGUST' THEN 8
WHEN MONTH_NAME='SEPTEMBER' THEN 9
WHEN MONTH_NAME='OCTOBER' THEN 10
WHEN MONTH_NAME='NOVEMBER' THEN 11
    
     ELSE 12
     END AS MONTH
     FROM
(select month_name,sum(casual) as casual,sum(member) as member
from (select month_name,
case when member_casual='casual' then count end casual,
case when member_casual='member' then count end member
from
(SELECT MONTH_NAME,MEMBER_CASUAL,COUNT(RIDE_ID)
FROM
(SELECT *,
CASE WHEN MONTH_NUMBER=1 THEN 'JANUARY'
     WHEN MONTH_NUMBER=2 THEN 'FEBRUARY'
     WHEN MONTH_NUMBER=3 THEN 'MARCH'
     WHEN MONTH_NUMBER=4 THEN 'APRIL'
     WHEN MONTH_NUMBER=5 THEN 'MAY'
     WHEN MONTH_NUMBER=6 THEN 'JUNE'
     WHEN MONTH_NUMBER=7 THEN 'JULY'
     WHEN MONTH_NUMBER=8 THEN 'AUGUST'
     WHEN MONTH_NUMBER=9 THEN 'SEPTMEBER'
     WHEN MONTH_NUMBER=10 THEN 'OCTOBER'
     WHEN MONTH_NUMBER=11 THEN 'NOVEMBER'
     ELSE 'DECEMBER'
     END AS MONTH_NAME
 FROM
(SELECT RIDE_ID,MEMBER_CASUAL,STARTED_AT,EXTRACT(MONTH FROM STARTED_AT) AS MONTH_NUMBER FROM "ANNUAL")T1)T2
GROUP BY MONTH_NAME,MEMBER_CASUAL) t)t3
group by month_name) t4
order by month
